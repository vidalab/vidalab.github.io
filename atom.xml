<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Data Visualization Code]]></title>
  <link href="http://blog.vida.io/atom.xml" rel="self"/>
  <link href="http://blog.vida.io/"/>
  <updated>2015-11-02T16:53:41-08:00</updated>
  <id>http://blog.vida.io/</id>
  <author>
    <name><![CDATA[Vida Lab]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Google Spreadsheet Data in d3.js Visualizations]]></title>
    <link href="http://blog.vida.io/2015/11/02/using-google-spreadsheet-data-in-d3-dot-js-visualizations/"/>
    <updated>2015-11-02T16:46:08-08:00</updated>
    <id>http://blog.vida.io/2015/11/02/using-google-spreadsheet-data-in-d3-dot-js-visualizations</id>
    <content type="html"><![CDATA[<p>Google Spreadsheet offers a convenient way to work with data on the web. It is now possible to retrieve live Google Spreadsheet data for d3.js visualizations. In this article, we&rsquo;ll show you how.</p>

<p>We make use of tabletop.js to abstract data retrieval task.
<a href="https://github.com/jsoma/tabletop">https://github.com/jsoma/tabletop</a></p>

<ol>
<li>Move d3.js visualization code into a function, e.g. drawChart.</li>
<li>Use tabletop.js to get data and render the visualization:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">public_spreadsheet_url</span> <span class="o">=</span> <span class="s1">&#39;https://docs.google.com/spreadsheets/d/1n-PIdnAJnxmHqVp_iE2g1k8UpPf-lEXLm_pu7zxuov4/pubhtml&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">renderSpreadsheetData</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Tabletop</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span> <span class="p">{</span> <span class="nx">key</span><span class="o">:</span> <span class="nx">public_spreadsheet_url</span><span class="p">,</span>
</span><span class='line'>                     <span class="nx">callback</span><span class="o">:</span> <span class="nx">draw</span><span class="p">,</span>
</span><span class='line'>                     <span class="nx">simpleSheet</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">draw</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">tabletop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// draw chart</span>
</span><span class='line'>  <span class="nx">drawChart</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">renderSpreadsheetData</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>And a live example:</p>

<p><a href="https://vida.io/documents/9eEyB4R74WWyrPXAi">https://vida.io/documents/9eEyB4R74WWyrPXAi</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interactive Dashboard With D3.js, Crossfilter, and Dc.js]]></title>
    <link href="http://blog.vida.io/2015/03/19/interactive-dashboard-with-d3-dot-js-and-dc-dot-js/"/>
    <updated>2015-03-19T13:43:36-07:00</updated>
    <id>http://blog.vida.io/2015/03/19/interactive-dashboard-with-d3-dot-js-and-dc-dot-js</id>
    <content type="html"><![CDATA[<p>We have built dashboards with Twitter and Sales data. The process is repetitive at chart level. We often want an easy way to swap in and out chart. A few customers ask us if they can put together dashboard themselves.</p>

<p>We came up with a solution for this problem with Composite Document editor. It is an interactive tool that lets you put together dashboard. You can add d3.js documents to dashboard, resize them to fit the page. If your chart supports crossfilter, they will be linked together.</p>

<!-- more -->


<p>Here are dc.js components that we put together for you to use:</p>

<ul>
<li><a href="https://vida.io/documents/9KEahcjNZNbneEzKW">Area Chart</a></li>
<li><a href="https://vida.io/documents/QMaJ8dgqGpjNkopfH">Day Filter</a></li>
<li><a href="https://vida.io/documents/YaWNh5JJ4HjpY9Toa">Table</a></li>
</ul>


<p>Send us an email <a href="mailto:contact@vida.io">contact@vida.io</a> if you are looking for a d3.js document for your dashboard.</p>

<p>We made a video demo of the feature. Link to document demo is below:</p>

<p><a href="https://vida.io/compositeDocuments/wXMrqy7JCYmtSDikB">FAA Flights January 2015 Dashboard</a></p>

<iframe width="630" height="472" src="https://www.youtube.com/embed/6CoKnV_oEiU" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visualizing Home Insurance Rates]]></title>
    <link href="http://blog.vida.io/2015/02/05/visualizing-home-insurance-rates/"/>
    <updated>2015-02-05T17:34:11-08:00</updated>
    <id>http://blog.vida.io/2015/02/05/visualizing-home-insurance-rates</id>
    <content type="html"><![CDATA[<p>This tutorial is a guest post from <a href="http://vHomeInsurance.com">vHomeInsurance.com</a>, a home insurance analytics service, visualized US wide home property prices using Vida.io. The below guide walks through a case study on representing geographical data on a map &amp; how they did it.</p>

<!-- more -->


<p>From the <a href="http://vHomeInsurance.com">vHomeInsurance.com</a> Team:</p>

<p><a href="https://vida.io">Vida.io</a> is a great place on the web to get the visualizations done. Using their templates, some complex map visualizations using D3.js can be done very easily, without much programing knowledge. The beauty of the tool is that only data needs to be plugged in and some styling elements edited, while it handles all the complexities itself.</p>

<p>Here is an example of we used vida.io to generate an awesome Chloropeth heat map representing home prices across the US at a county level.</p>

<p><b>Interactive Heatmap (Hover to See Value)</b></p>

<iframe src="http://embed.vida.io/documents/CvFWfA899K4gtNBtN" width="650" height="420" seamless frameBorder="0" scrolling="no"></iframe>


<p>The above chart from Vida.io is a visualization of home values in all the counties in US quantized to 21 levels, with lighter values representing the counties where homes are cheaper and the darkest are the counties where the homes are the costliest.</p>

<p><b>Search for Your Visualization</b></p>

<p>To generate visualizations like the above heat map:</p>

<ol>
<li>Register and log in</li>
<li>Navigate to Explore section of the page</li>
<li>Click &ldquo;More&rdquo; button of &ldquo;maps&rdquo; category</li>
<li>Select “US Map Counties &ndash; Choropleth”</li>
<li>Clone the document template (clone button is available on the left side just below the map)</li>
</ol>


<p><img src="http://i.imgur.com/1IE8Ewh.png" width="100%"/></p>

<p><b>Get Familiar with the Editing Screen</b></p>

<p>Once the template is cloned, the document is shown in the home screen, click on the document to start editing it. The right half of the editor window has code , data,stylesheets and other configurable variables while the left half has the map itself so that the effect of the changes made can be seen immediately to start editing the document.</p>

<p><img src="http://imgur.com/vffdaVt.png" width="100%"/></p>

<p><b>Import your data</b></p>

<p>We can import data in any one csv, tsv or json format by clicking the import button in the data tab or it can directly be pasted in the editor. If you want to keep things simple keep the headers as is. For example, in the data we imported, we had the county ID  &amp; the home value rates. We can retain those same headers or change it to whatever we want. For example, if we want to change rates to Home Values we need to edit a few extra lines of code.</p>

<p>For the county &amp; geographical information, it has to be noted that the id column in the default data is the combination of state FIPS code and county FIPS code, its important that the data to be visualized contains this number as the its used as the identity of the county when map is generated</p>

<p>More information about the number can be obtained from
<a href="https://www.census.gov/geo/reference/codes/cou.html">https://www.census.gov/geo/reference/codes/cou.html</a></p>

<p><b>Edit Javascript</b></p>

<p>This is where all the magic happens. All the code needed to generate the visualization is already present, we only need to edit one or two lines depending upon what we want to achieve</p>

<p>Notice the following code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">quantize</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">quantize</span><span class="p">()</span>
</span><span class='line'>                  <span class="p">.</span><span class="nx">domain</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="p">.</span><span class="mi">15</span><span class="p">])</span>
</span><span class='line'>                  <span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="nx">d3</span><span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="mi">9</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;q&quot;</span> <span class="o">+</span> <span class="nx">i</span> <span class="o">+</span> <span class="s2">&quot;-9&quot;</span><span class="p">;</span> <span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s of the form:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">quantize</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">quantize</span><span class="p">()</span>
</span><span class='line'>                  <span class="p">.</span><span class="nx">domain</span><span class="p">([</span><span class="o">&lt;</span><span class="nx">LOWEST</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="nx">HIGHEST</span><span class="o">&gt;</span><span class="p">])</span>
</span><span class='line'>                  <span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="nx">d3</span><span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">Q</span><span class="o">&gt;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;q&quot;</span> <span class="o">+</span> <span class="nx">i</span> <span class="o">+</span> <span class="s2">&quot;-9&quot;</span><span class="p">;</span> <span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Where:</p>

<p>&lt;LOWEST&gt; is the lowest value your data can have</p>

<p>&lt;HIGHEST&gt; is the highest value your data can have</p>

<p>&lt;Q&gt; is the number of quantization levels you want for your data, here it is number of colors you want to use in the cloropeth</p>

<p>Change those values according to your data and needs.</p>

<p>If you have changed the headers for data in the data tab see the following code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">rateById</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">rate</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Its equivalent to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">rateById</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="o">&lt;</span><span class="nx">Column</span> <span class="nx">Name</span><span class="o">&gt;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are comfortable with representing your data in less than 9 colors, just save the document using the save button on the top right and you can see your visualization on the left side of the screen immediately.</p>

<p><b>Change the Colors</b></p>

<p>You can change the colors in the map or other styling in stylesheet tab:</p>

<p>If you have used the default 9 quantization levels its enough to edit the numbers in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.q0-9</span> <span class="p">{</span> <span class="n">fill</span><span class="o">:</span><span class="k">rgb</span><span class="p">(</span><span class="m">247</span><span class="o">,</span><span class="m">251</span><span class="o">,</span><span class="m">255</span><span class="p">);</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To change the color of a quantization level 0. you can choose the colors using any online css color picker tool.</p>

<p>If you were not satisfied with 9 quantization levels and increased the number, you need to add the colors you want to use for that quantization level.</p>

<p>For example if you used 11 quantization levels, you need to add the lines:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.q9-9</span> <span class="p">{</span> <span class="n">fill</span><span class="o">:</span><span class="k">rgb</span><span class="p">(</span><span class="m">255</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">255</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.q10-9</span> <span class="p">{</span> <span class="n">fill</span><span class="o">:</span><span class="k">rgb</span><span class="p">(</span><span class="m">255</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="p">);</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To use the colors magenta and red to represent the newly added quantization level 9 and 10 respectively.</p>

<p>Save the document to see the visualization.</p>

<p><b>Share your work</b></p>

<p>You can find the code to embed the map in web pages and the link to share your work by clicking the Embed button under Settings tab.</p>

<p>View and clone home insurance visualization here:</p>

<p><a href="https://vida.io/documents/CvFWfA899K4gtNBtN">https://vida.io/documents/CvFWfA899K4gtNBtN</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[D3.js Document Template and GitHub Integration]]></title>
    <link href="http://blog.vida.io/2014/12/20/d3-dot-js-document-template-and-github-integration/"/>
    <updated>2014-12-20T18:25:29-08:00</updated>
    <id>http://blog.vida.io/2014/12/20/d3-dot-js-document-template-and-github-integration</id>
    <content type="html"><![CDATA[<p>In this blog post, we want to show you integration between vida.io cloud editor and GitHub. git is a great source control tool to keep track of complex visualization project.</p>

<p>You can import your git repository for instant view and sharing in the cloud.</p>

<!-- more -->


<p>vida.io use a new repository format. We made a few enhancements:</p>

<ol>
<li>Full git repo (issue tracking, pull request)</li>
<li>Separation of data and code</li>
<li>Support for visualization properties</li>
</ol>


<p>This is done through manifest.json file. Here&rsquo;s a manifest.json for Line chart template:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;data&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;document.json&quot;</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;javascript&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;document.js&quot;</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;stylesheet&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;document.css&quot;</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;html&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;document.html&quot;</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;properties&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Data Column 0 (X Axis)&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;data0&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;data_column&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="kc">null</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Data Column 1 (Y Axis)&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;data1&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;data_column&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="kc">null</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Label 0&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;label0&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="s2">&quot;label 0&quot;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Label 1&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;label1&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="s2">&quot;label 1&quot;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Color 0&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;color0&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;color&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="s2">&quot;#0f608b&quot;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Color 1&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;color1&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;color&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="s2">&quot;#99ccff&quot;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Width&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="mi">800</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="nt">&quot;label&quot;</span><span class="p">:</span><span class="s2">&quot;Height&quot;</span><span class="p">,</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="nt">&quot;value&quot;</span><span class="p">:</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We host the document template repository on GitHub. You can clone it to get started.</p>

<p><a href="https://github.com/vidalab/document_template">https://github.com/vidalab/document_template</a></p>

<p>Here&rsquo;s a <a href="http://bl.ocks.org/d3noob/5141278">Directional Force Layout</a> repository (original code from @d3noob):</p>

<p><a href="https://github.com/dnprock/document_template">https://github.com/dnprock/document_template</a></p>

<p>You can quickly import your GitHub repository into vida.io:</p>

<ol>
<li>Login to vida.io</li>
<li>Select D3 Documents</li>
<li>Click New Document</li>
<li>Select Import GitHub type</li>
<li>Paste your GitHub repository URL (e.g. <a href="https://github.com/dnprock/document_template">https://github.com/dnprock/document_template</a>)</li>
<li>Click Import</li>
</ol>


<p>Viola! Now you have a live visualization in the cloud. You can share with your team and customers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making D3.js Reusable With Templates]]></title>
    <link href="http://blog.vida.io/2014/08/28/making-d3-dot-js-reusable-with-templates/"/>
    <updated>2014-08-28T13:48:49-07:00</updated>
    <id>http://blog.vida.io/2014/08/28/making-d3-dot-js-reusable-with-templates</id>
    <content type="html"><![CDATA[<p>D3.js is an awesome library for visualization. However, it requires a developer to perform the magic. So far, it has not been so popular with traditional data analysts.</p>

<p>At <a href="https://vida.io">vida.io</a>, we set out to bring D3.js to less technically savvy users. We want to enable them to create amazing data visualizations with D3.js. Our approach is template.</p>

<!-- more -->


<p><b>What is a D3.js Template?</b></p>

<p>It&rsquo;s a D3.js visualization that you can reuse by just plugging in new data. For example, one of our customers want to be able to compare metrics of two different entities. We made a template with multiple side-by-side bar charts. Below are comparisons of India vs. China and Apple vs. Orange.</p>

<div style="width: 100%; float: left">
<div style="float: left; width: 45%"><a href="https://vida.io/documents/ZCzewTza4ZSzMWSBG">India vs. China<br><img src="http://i.imgur.com/gBZEQHe.png?1" width="100%" title="India vs. China" /></a></div>

<div style="float: right; width: 45%"><a href="https://vida.io/documents/7Ynhpabosba6uABXD">Apple vs. Orange<br><img src="http://i.imgur.com/K8k4I6A.png" width="100%" title="Apple vs. Orange" /></a></div>
</div>




<br>


<p>Both visualizations share the same JavaScript and Stylesheet. User can clone India vs. China template, add new data, update colors to get Apple vs. Orange.</p>

<p>Data for India vs. China:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;chart_title&quot;</span><span class="p">:</span> <span class="s2">&quot;Population&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;unit&quot;</span><span class="p">:</span> <span class="s2">&quot;billion&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;India&quot;</span><span class="p">:</span> <span class="mf">1.22</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;China&quot;</span><span class="p">:</span> <span class="mf">1.36</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">...</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Data for Apple vs. Orange:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;chart_title&quot;</span><span class="p">:</span> <span class="s2">&quot;Calories&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;unit&quot;</span><span class="p">:</span> <span class="s2">&quot;int&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;Apple&quot;</span><span class="p">:</span> <span class="mi">52</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;Orange&quot;</span><span class="p">:</span> <span class="mi">47</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">...</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see data format for two visualizations are identical.</p>

<p><b>Reuse a D3.js Template</b></p>

<p>You can create new D3.js visualizations in 3 quick steps with <a href="https://vida.io">vida.io</a> tool.</p>

<ol>
<li>Clone a visualization template</li>
<li>Apply new data</li>
<li>Update styling and colors</li>
</ol>


<p><b>More Templates</b></p>

<p>Here&rsquo;s a complex template used by the <a href="https://www.wabusinessalliance.org/">Washington Business Alliance</a> to display metrics of US states.</p>

<div style="width: 100%; float: left">
<div style="float: left; width: 33%"><a href="https://vida.io/documents/4vZ9mRGyepoyQxFcK">Obesity<br><img src="http://i.imgur.com/UgFqLF0.png" width="100%" title="Obesity" /></a></div>

<div style="float: left; width: 33%"><a href="https://vida.io/documents/69un8KK53pakRQtLZ">Wine Consumption<br><img src="http://i.imgur.com/u2GqAJO.png" width="100%" title="Wine Consumption" /></a></div>

<div style="float: right; width: 33%"><a href="https://vida.io/documents/5pQED7H5Lym36xsuC">Hockey Players per 100k residents<br><img src="http://i.imgur.com/0HOfp4a.png" width="100%" title="Hockey Players" /></a></div>
</div>


<p>Check out the list of templates on <a href="https://vida.io/explore">vida.io/explore</a>. If you need more, contact us at <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#x3a;&#x63;&#111;&#x6e;&#x74;&#97;&#99;&#116;&#x40;&#x76;&#105;&#x64;&#x61;&#46;&#105;&#111;&#x2e;">&#x63;&#111;&#110;&#116;&#97;&#99;&#x74;&#x40;&#x76;&#105;&#x64;&#x61;&#46;&#105;&#111;&#x2e;</a></p>

<p>With template, D3.js is easy to use, reuseable, and affordable. Add it to your toolbox for business intelligence and data analysis!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BigQuery Big Data Visualization With D3.js]]></title>
    <link href="http://blog.vida.io/2014/07/06/bigquery-big-data-visualization-with-d3-dot-js/"/>
    <updated>2014-07-06T21:58:05-07:00</updated>
    <id>http://blog.vida.io/2014/07/06/bigquery-big-data-visualization-with-d3-dot-js</id>
    <content type="html"><![CDATA[<p>How to handle large dataset with D3.js?</p>

<p>It&rsquo;s a frequently asked question. You can read several discussions on the topic <a href="http://stackoverflow.com/questions/19144369/how-to-handle-large-dataset-in-d3js">here</a>, <a href="http://stackoverflow.com/questions/18244995/d3-how-to-show-large-dataset">here</a>, and <a href="https://groups.google.com/forum/#!topic/d3-js/aRKFtUaE5h4">here</a>. So far, the best solution is to process data to a smaller dataset. Then use D3.js to visualize.</p>

<p>With carefully crafted data processing, we can get decent story from data. But this solution doesn&rsquo;t provide a lot of flexibility to experiment with data on the fly. We need a more streamlined workflow. Less friction can spark interesting data innovation.</p>

<p>I recently delved deep into Google BigQuery. It&rsquo;s a great tool to handle big dataset. It&rsquo;s definitely going to help us handle big dataset for D3.js.</p>

<!-- more -->


<p>I will use New York Taxi dataset hosted on Google BigQuery. It is 4+ GB and has more than 350 million rows in 2 tables. In this article, I want to show you how to query it on the fly. Then use D3.js to create a line chart of total trip amount over time. You can explore the dataset here:</p>

<p>(You&rsquo;ll need to setup BigQuery account with one project to see public table)</p>

<p><a href="https://bigquery.cloud.google.com/table/833682135931:nyctaxi.trip_fare?pli=1">https://bigquery.cloud.google.com/table/833682135931:nyctaxi.trip_fare?pli=1</a></p>

<p>BigQuery has full SQL support. So we can run aggregate query directly on dataset. We&rsquo;ll group by month/year and sum total_amount column. It takes less than 5 seconds.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="n">CONCAT</span><span class="p">(</span><span class="n">CONCAT</span><span class="p">(</span><span class="n">STRING</span><span class="p">(</span><span class="k">MONTH</span><span class="p">(</span><span class="k">TIMESTAMP</span><span class="p">(</span><span class="n">pickup_datetime</span><span class="p">))),</span> <span class="ss">&quot;/&quot;</span><span class="p">),</span> <span class="n">STRING</span><span class="p">(</span><span class="k">YEAR</span><span class="p">(</span><span class="k">TIMESTAMP</span><span class="p">(</span><span class="n">pickup_datetime</span><span class="p">))))</span> <span class="k">AS</span> <span class="n">time</span><span class="p">,</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="nb">INTEGER</span><span class="p">(</span><span class="n">total_amount</span><span class="p">))</span> <span class="k">AS</span> <span class="n">total_amount</span>
</span><span class='line'><span class="k">FROM</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">833682135931</span><span class="p">:</span><span class="n">nyctaxi</span><span class="p">.</span><span class="n">trip_fare</span><span class="p">]</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span>
</span><span class='line'>  <span class="n">time</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I export my result data to CSV and show here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">time</span><span class="p">,</span><span class="n">total_amount</span>
</span><span class='line'><span class="mi">8</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">57131656</span>
</span><span class='line'><span class="mi">9</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">127640676</span>
</span><span class='line'><span class="mi">2</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">60858916</span>
</span><span class='line'><span class="mi">5</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">69475856</span>
</span><span class='line'><span class="mi">1</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">64333338</span>
</span><span class='line'><span class="mi">10</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">67093673</span>
</span><span class='line'><span class="mi">11</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">63805595</span>
</span><span class='line'><span class="mi">3</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">69752928</span>
</span><span class='line'><span class="mi">12</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">63510475</span>
</span><span class='line'><span class="mi">7</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">62018079</span>
</span><span class='line'><span class="mi">6</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">65204371</span>
</span><span class='line'><span class="mi">4</span><span class="o">/</span><span class="mi">2013</span><span class="p">,</span><span class="mi">67594555</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since I don&rsquo;t own this dataset, I can&rsquo;t query it on the fly directly. So I&rsquo;m going to save this view to my account. But if you are the owner, you can run the above query directly. I&rsquo;ll be using the following query for the saved view:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="p">[</span><span class="n">nyc_taxi</span><span class="p">.</span><span class="n">total_amount_month</span><span class="p">]</span> <span class="k">LIMIT</span> <span class="mi">1000</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we can construct our D3.js Javascript code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">onClientLoadHandler</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// setup D3.js</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// run BigQuery</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">runQuery</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">gapi</span><span class="p">.</span><span class="nx">client</span><span class="p">.</span><span class="nx">bigquery</span><span class="p">.</span><span class="nx">jobs</span><span class="p">.</span><span class="nx">query</span><span class="p">({</span>
</span><span class='line'>      <span class="s1">&#39;projectId&#39;</span><span class="o">:</span> <span class="s2">&quot;master-smithy-633&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;timeoutMs&#39;</span><span class="o">:</span> <span class="s1">&#39;30000&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="c1">// use your own query here</span>
</span><span class='line'>      <span class="s1">&#39;query&#39;</span><span class="o">:</span> <span class="s1">&#39;SELECT * FROM [nyc_taxi.total_amount_month] LIMIT 1000;&#39;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">request</span><span class="p">.</span><span class="nx">execute</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">bqData</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">response</span><span class="p">.</span><span class="nx">result</span><span class="p">.</span><span class="nx">rows</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">bqData</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s2">&quot;%m/%Y&quot;</span><span class="p">).</span><span class="nx">parse</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">v</span><span class="p">),</span>
</span><span class='line'>            <span class="s2">&quot;amount&quot;</span><span class="o">:</span> <span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">v</span><span class="p">});</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">drawLineChart</span><span class="p">(</span><span class="nx">bqData</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// authenticate to BigQuery, it asks for your Google credential to perform oauth</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;client_id&#39;</span><span class="o">:</span> <span class="s1">&#39;262329615658-hhd3mjl4rkcq85njprr33s6hbau97bma.apps.googleusercontent.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;scope&#39;</span><span class="o">:</span> <span class="s1">&#39;https://www.googleapis.com/auth/bigquery&#39;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="nx">gapi</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="nx">config</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">runQuery</span><span class="p">();</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">drawLineChart</span><span class="p">(</span><span class="nx">bqData</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// D3.js line chart drawing code</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// run client library load</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">getScript</span><span class="p">(</span><span class="s2">&quot;https://apis.google.com/js/client.js&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">onClientLoadHandler</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. You can check out full code example here. You&rsquo;ll need to clone it and use your client_id key. Make sure your key allows vida.io origin.</p>

<p><a href="https://vida.io/documents/icwvp4qcCbEkYW2ve">https://vida.io/documents/icwvp4qcCbEkYW2ve</a></p>

<p><img src="http://i.imgur.com/4uem4Qm.png?1" alt="BigQuery Line Chart" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Visualization Tutorial 2: Functions]]></title>
    <link href="http://blog.vida.io/2014/06/23/coding-visualization-tutorial-2-functions/"/>
    <updated>2014-06-23T17:40:04-07:00</updated>
    <id>http://blog.vida.io/2014/06/23/coding-visualization-tutorial-2-functions</id>
    <content type="html"><![CDATA[<p>Function is a block of code to perform a particular task. You can use function to reduce repetitive code and improve readability. Function can be a separate object or part of another object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// general syntax</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">name</span><span class="p">(</span><span class="nx">variables</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// execute task</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// for example, multiple two numbers</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">multiply</span><span class="p">(</span><span class="nx">n1</span><span class="p">,</span> <span class="nx">n2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">n1</span> <span class="o">*</span> <span class="nx">n2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// this call return 12 and assign to n</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">multiply</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// This function selects div tag with id=&quot;canvas-svg&quot;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">canvas_svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#canvas-svg&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Append svg element to canvas_svg div</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">canvas_svg</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>You can call functions in a chain. It&rsquo;s commonly used in D3 code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This statement calls select and append on select result</span>
</span><span class='line'><span class="c1">// It&#39;s equivalent to two statements above.</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#canvas-svg&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Even more chaining:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#canvas-svg&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">width</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">right</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="nx">height</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">bottom</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span> <span class="s2">&quot;translate(&quot;</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="s2">&quot;)&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Above code do the following:</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Append svg element to #canvas-svg div, this statement returns svg element</span>
</span><span class='line'><span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#canvas-svg&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set width and height of svg element</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">width</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">right</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="nx">height</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">bottom</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Append g element to svg element</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set transform attribute of above g element</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span> <span class="s2">&quot;translate(&quot;</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">left</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">top</span> <span class="o">+</span> <span class="s2">&quot;)&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>After that, you&rsquo;ll get canvas-svg div like below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;canvas-svg&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;svg</span> <span class="na">width=</span><span class="s">&quot;800&quot;</span> <span class="na">height=</span><span class="s">&quot;450&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;g</span> <span class="na">transform=</span><span class="s">&quot;translate(50,20)&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- visualization elements --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/g&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/svg&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>See example document here:</p>

<p><a href="https://vida.io/documents/9Pst6wmB83BgRZXgx">https://vida.io/documents/9Pst6wmB83BgRZXgx</a></p>

<p>See tutorial video here:</p>

<iframe width="630" height="472" src="//www.youtube.com/embed/PlH1MIrYY_M" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Visualization Tutorial 1: Variables]]></title>
    <link href="http://blog.vida.io/2014/06/23/coding-visualization-tutorial-1-variables/"/>
    <updated>2014-06-23T14:44:42-07:00</updated>
    <id>http://blog.vida.io/2014/06/23/coding-visualization-tutorial-1-variables</id>
    <content type="html"><![CDATA[<p>In this tutorial, we want to explore Javascript variables. They are important code components. We will review the major variable types that you&rsquo;ll see in a D3 visualization. Then we will dive into visualization examples and play with variables.</p>

<p>You can declare Javascript variables as below:</p>

<p>(// is comment)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// declare WIDTH variable, the type is integer</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">WIDTH</span> <span class="o">=</span> <span class="mi">800</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// declare HEIGHT variable, the type is integer</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">HEIGHT</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// declare margin as hash with keys are 4 corners of visualization,</span>
</span><span class='line'><span class="c1">// hash is a key value pair, use key to access value,</span>
</span><span class='line'><span class="c1">// for example, margin.top returns an integer of value 20</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">margin</span> <span class="o">=</span> <span class="p">{</span><span class="nx">top</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nx">right</span><span class="o">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nx">bottom</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span> <span class="nx">left</span><span class="o">:</span> <span class="mi">50</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// string variable</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Y_AXIS_LABEL</span> <span class="o">=</span> <span class="s2">&quot;Price ($)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// array variable</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="c1">// add 2 data points to data array</span>
</span><span class='line'><span class="nx">data</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x_axis</span><span class="o">:</span> <span class="s2">&quot;1-May-12&quot;</span><span class="p">},</span> <span class="p">{</span><span class="nx">y_axis</span><span class="o">:</span> <span class="mf">582.13</span><span class="p">});</span>
</span><span class='line'><span class="nx">data</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x_axis</span><span class="o">:</span> <span class="s2">&quot;30-May-12&quot;</span><span class="p">},</span> <span class="p">{</span><span class="nx">y_axis</span><span class="o">:</span> <span class="mf">583.98</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// boolean variable, 2 values: true or false</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">check</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// variable can be an object which means it can be anything</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">xAxis</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">svg</span><span class="p">.</span><span class="nx">axis</span><span class="p">()</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">orient</span><span class="p">(</span><span class="s2">&quot;bottom&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// think of xAxis as a d3 axis type, it can do some axis magic</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>Things you can do with variables:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// for number, arithmetic</span>
</span><span class='line'><span class="c1">// calculate real width, height of visualization</span>
</span><span class='line'><span class="c1">// by subtracting margins, number can be subtracted</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">width</span> <span class="o">=</span> <span class="nx">WIDTH</span> <span class="o">-</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">left</span> <span class="o">-</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">height</span> <span class="o">=</span> <span class="nx">HEIGHT</span> <span class="o">-</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">top</span> <span class="o">-</span> <span class="nx">margin</span><span class="p">.</span><span class="nx">bottom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// you can concatenate string with +</span>
</span><span class='line'><span class="nx">Y_AXIS_LABEL</span> <span class="o">=</span> <span class="nx">Y_AXIS_LABEL</span> <span class="o">+</span>  <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="s2">&quot;Dollars&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// now Y_AXIS_LABEL is &quot;Price ($) Dollars&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// access data array</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// data[0] returns 1st data point</span>
</span><span class='line'><span class="c1">// check if value of 2nd data point is greater than 1st data point</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">check</span> <span class="o">=</span> <span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y_axis</span> <span class="o">&gt;</span> <span class="nx">data</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">y_axis</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s an example D3 document you can use:</p>

<p><a href="https://vida.io/documents/eSGFToFs3gXk4LEwP">https://vida.io/documents/eSGFToFs3gXk4LEwP</a></p>

<p>See tutorial video here:</p>

<iframe width="630" height="472" src="//www.youtube.com/embed/5Jg7RLZC6s8" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extract Web Data With import.io and Create D3 Visualization]]></title>
    <link href="http://blog.vida.io/2014/06/08/extract-web-data-with-import-dot-io-and-create-d3-visualization/"/>
    <updated>2014-06-08T22:45:06-07:00</updated>
    <id>http://blog.vida.io/2014/06/08/extract-web-data-with-import-dot-io-and-create-d3-visualization</id>
    <content type="html"><![CDATA[<p>With vida.io, you can quickly create new data visualizations. But how would you collect the data? There are now powerful and easy to use tools for this task. In this article, I will show you how to use import.io to extract web data and create d3 map visualization.</p>

<!-- more -->


<ol>
<li>Download <a href="https://import.io/">import.io</a> app.</li>
<li>Register your account and and login.</li>
<li>Create a new dataset. This will open a new tab.</li>
<li>Click Add Data menu and select &ldquo;Create new Source&rdquo; from drop down.</li>
<li>Enter wikipedia data source into import.io URL browser: <a href="http://en.wikipedia.org/wiki/Obesity_in_the_United_States">http://en.wikipedia.org/wiki/Obesity_in_the_United_States</a></li>
<li>Extract data and upload to import.io. Final data will look like this:<img src="https://s3-us-west-2.amazonaws.com/vida-public/blog/import-io-dataset.png" width="600"></li>
</ol>


<p>Once we are done with you can download data from import.io to CSV format. It is now ready for visualization on <a href="https://vida.io">vida.io</a>. Register an account if you don&rsquo;t have one.</p>

<ol>
<li>Open <a href="https://vida.io/d3-map">d3-map</a> page.</li>
<li>Select &ldquo;US Map States &ndash; Choropleth&rdquo; template and clone to your account.</li>
<li>Rename visualization (e.g. Obesity in the United States) and add description.</li>
<li>Go to data tab and import downloaded CSV file above. Click Save to save data.</li>
<li>Go to properties tab, select state_and_district_of_columbia for Map State field and overweight_incl_obese_adults_number for Map Value field.</li>
<li>Click Save to refresh visualization. Here&rsquo;s the <a href="https://vida.io/documents/bJDg3iQwyXcfngjgf">final visualization</a>:</li>
</ol>


<iframe src="http://embed.vida.io/documents/bJDg3iQwyXcfngjgf" width="800" height="450" seamless frameBorder="0" scrolling="no"></iframe>


<p>That&rsquo;s it! Check out more templates on <a href="https://vida.io/explore">Explore</a> section.</p>

<p>Here&rsquo;s a video tutorial that walks you through all the steps above:</p>

<iframe width="600" height="450" src="//www.youtube.com/embed/b4vxnmdZN98" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Embed d3.js Visualization to Blog]]></title>
    <link href="http://blog.vida.io/2014/05/31/embed-d3-dot-js-visualization-to-blog/"/>
    <updated>2014-05-31T23:54:14-07:00</updated>
    <id>http://blog.vida.io/2014/05/31/embed-d3-dot-js-visualization-to-blog</id>
    <content type="html"><![CDATA[<p>I recently got a question from our user on how to embed d3.js visualization into their blog. A quick search returns several solutions like bl.ocks.org or Wordpress D3 plugin. The first solution requires programmer intervention each time content owner needs to update the site. Wordpress D3 plugin requires installation of plugin.</p>

<p>There comes <a href="https://vida.io">vida.io</a> embed. Our site provides simple solution. Blog content owner can update post without programmer&rsquo;s intervention. In case of visualization update, he/she can use <a href="https://vida.io">vida.io</a> editor to quickly make change.</p>

<!-- more -->


<p>Here&rsquo;s an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;iframe</span> <span class="na">src=</span><span class="s">&quot;http://embed.vida.io/documents/SodotqYWppo6NWK9m&quot;</span> <span class="na">width=</span><span class="s">&quot;100%&quot;</span> <span class="na">height=</span><span class="s">&quot;340&quot;</span> <span class="na">seamless</span> <span class="na">frameBorder=</span><span class="s">&quot;0&quot;</span> <span class="na">scrolling=</span><span class="s">&quot;no&quot;</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<iframe src="http://embed.vida.io/documents/SodotqYWppo6NWK9m" width="100%" height="340" seamless frameBorder="0" scrolling="no"></iframe>


<p>The above visualization is responsive to window width. It fits to mobile devices. This is supported by viewbox resize technique:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">resizeViewbox</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">targetWidth</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#canvas&#39;</span><span class="p">).</span><span class="nx">width</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">targetWidth</span> <span class="o">&gt;</span> <span class="nx">frameWidth</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">targetWidth</span> <span class="o">=</span> <span class="nx">frameWidth</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">chart</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">targetWidth</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">chart</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="nx">targetWidth</span> <span class="o">/</span> <span class="nx">aspect</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s a simple technique that works with <a href="https://vida.io">vida.io</a> embed. <a href="mailto:contact@vida.io">Contact us</a> if you have any question.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiment With d3.js in the Cloud]]></title>
    <link href="http://blog.vida.io/2014/05/28/experiment-with-d3-dot-js-in-the-cloud/"/>
    <updated>2014-05-28T00:12:31-07:00</updated>
    <id>http://blog.vida.io/2014/05/28/experiment-with-d3-dot-js-in-the-cloud</id>
    <content type="html"><![CDATA[<p>bl.ocks.org is a popular tool within D3 community for sharing data visualization. While it is great to be able to share visualization, bl.ocks.org is not easy to experiment with your visualization.</p>

<p>We are building a new offering at vida.io to enable cloud experimentation. You can quickly import and play with the visualization. There are two ways to import d3.js block into vida.io. The first way is directly from gist. The second way is to create a reusable template document.</p>

<p><b>Import gist or block</b></p>

<p>Video demo:</p>

<iframe width="630" height="472" src="https://www.youtube.com/embed/ZOSiMGcBtug" frameborder="0" allowfullscreen></iframe>


<ol>
<li>Copy Gist (Block) URL</li>
<li>Login to vida.io and select Gists (Blocks) menu</li>
<li>Click on Import button and paste in the URL</li>
<li>Click Create button</li>
</ol>


<p><b>Create a resuable template document from gist or block</b></p>

<p>Video demo:</p>

<iframe width="630" height="472" src="//www.youtube.com/embed/e1BOJnW9N3Q" frameborder="0" allowfullscreen></iframe>


<p>In this post, we&rsquo;ll use this bl.ocks.org example for d3noob:</p>

<p><a href="http://bl.ocks.org/d3noob/5141278">Basic Directional Force Layout Diagram</a></p>

<!-- more -->


<p>Here are the steps to import bl.ocks.org to <a href="https://vida.io">vida.io</a>:</p>

<ol>
<li>Create a new document in vida.io</li>
<li>Copy stylesheet code to Stylesheet tab</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">path</span><span class="nc">.link</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">fill</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>  <span class="n">stroke</span><span class="o">:</span> <span class="m">#666</span><span class="p">;</span>
</span><span class='line'>  <span class="n">stroke</span><span class="o">-</span><span class="k">width</span><span class="o">:</span> <span class="m">1.5px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">circle</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">fill</span><span class="o">:</span> <span class="m">#ccc</span><span class="p">;</span>
</span><span class='line'>  <span class="n">stroke</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="n">stroke</span><span class="o">-</span><span class="k">width</span><span class="o">:</span> <span class="m">1.5px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">text</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">fill</span><span class="o">:</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font</span><span class="o">:</span> <span class="m">10px</span> <span class="k">sans-serif</span><span class="p">;</span>
</span><span class='line'>  <span class="k">pointer</span><span class="o">-</span><span class="n">events</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Copy javascript code to Javascript tab. No need to copy d3.csv call, data field is already declared by vida.io</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">nodes</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Compute the distinct nodes from the links.</span>
</span><span class='line'><span class="nx">links</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">link</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">link</span><span class="p">.</span><span class="nx">source</span> <span class="o">=</span> <span class="nx">nodes</span><span class="p">[</span><span class="nx">link</span><span class="p">.</span><span class="nx">source</span><span class="p">]</span> <span class="o">||</span>
</span><span class='line'>        <span class="p">(</span><span class="nx">nodes</span><span class="p">[</span><span class="nx">link</span><span class="p">.</span><span class="nx">source</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="nx">link</span><span class="p">.</span><span class="nx">source</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">link</span><span class="p">.</span><span class="nx">target</span> <span class="o">=</span> <span class="nx">nodes</span><span class="p">[</span><span class="nx">link</span><span class="p">.</span><span class="nx">target</span><span class="p">]</span> <span class="o">||</span>
</span><span class='line'>        <span class="p">(</span><span class="nx">nodes</span><span class="p">[</span><span class="nx">link</span><span class="p">.</span><span class="nx">target</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="nx">link</span><span class="p">.</span><span class="nx">target</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">link</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="o">+</span><span class="nx">link</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ...</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">node</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="s2">&quot;translate(&quot;</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">x</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y</span> <span class="o">+</span> <span class="s2">&quot;)&quot;</span><span class="p">;</span> <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Rename links variable name to data</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// links.forEach(function(link) {</span>
</span><span class='line'>
</span><span class='line'><span class="nx">data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">link</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// .links(links) </span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">links</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Copy force.csv data to Data tab</li>
<li>Save to refresh the visualization. You can start tweaking parameters of the visualization.</li>
</ol>


<p>Here is the final result document:</p>

<p><a href="https://vida.io/documents/XWsLjooRt6KXadzT9">Directional Force Layout</a></p>
]]></content>
  </entry>
  
</feed>
